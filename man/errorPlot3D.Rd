% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error_plot.R
\name{errorPlot3D}
\alias{errorPlot3D}
\title{3d Visualization of comparison between true value, prediction error and item's relevance}
\usage{
errorPlot3D(
  trues,
  preds,
  phi.parms,
  modelname = NULL,
  e = 1,
  thr = 0,
  absolute = TRUE,
  errlim = NULL
)
}
\arguments{
\item{trues}{Target values from a test set of a given data set. Should be a vector and have the same size as the variable preds}

\item{preds}{Predicted values given a certain test set of a given data set. Should be a vector and have the same size as the variable preds}

\item{phi.parms}{The relevance function providing the data points where the pairs of values-relevance are known (use ?phi.control() for more information)}

\item{modelname}{The name attributed to the prediction model used for caption of the plot - empty by default}

\item{e}{Exponent for distance - 1 is linear (mae) and 2 is quadratic (mse)}

\item{thr}{Relevance threshold (default 0)}

\item{absolute}{Boolean for calculating absolute distance or not (default yes)}

\item{errlim}{Definition of the error limits for the plot (optional)}
}
\value{
Produces a 3D plot with a visualization comparing prediction error, target value and item's relevance
}
\description{
This function produces a 3d plot describing the prediction error of a given set pair of true and predicted values. The objective is to allow a 3-way comparison between the true values of a given data set, the predicted value of a certain model, and the relevance of each true value.
}
\examples{
\dontrun{
library(IRon)
require(rpart)
require(plot3D)

data(accel)
form <- acceleration ~ .

ind <- sample(1:nrow(accel),0.75*nrow(accel))
train <- accel[ind,]
test <- accel[-ind,]

# In the case of a single plot this is a simple solution

phi.parms <- phi.control(accel$acceleration)
trues <- accel$acceleration

m1 <- rpart::rpart(form,train)
p1 <- predict(m1,test)

errorPlot3D(trues,p1,phi.parms)
errorPlot3D(trues,p1,phi.parms,modelname="Regression Trees")
errorPlot3D(trues,p1,phi.parms,modelname="Regression Trees",errlim=c(0,10))
errorPlot3D(trues,p1,phi.parms,modelname="Regression Trees",absolute=FALSE)

#Example for multiple plots w.r.t. various underlying prediction models

require(randomForest)
require(e1071)
require(earth)

m2 <- randomForest::randomForest(form,train)
p2 <- predict(m2,test)

m3 <- e1071::svm(form,train)
p3 <- predict(m3,test)

m4 <- earth::earth(form,train)
p4 <- as.vector(predict(m4,test))

par(mfrow = c(2, 2),     # 2x2 layout
oma = c(2, 2, 1, 0), # two rows of text at the outer left and bottom margin
mar = c(2, 2, 0, 0), # space for one row of text at ticks and to separate plots
mgp = c(2, 1, 0),    # axis label at 2 rows distance, tick labels at 1 row
xpd = NA)            # allow content to protrude into outer margin (and beyond)

errorPlot3D(trues,p1,phi.parms,modelname="Regression Trees")
errorPlot3D(trues,p2,phi.parms,modelname="Random Forests")
errorPlot3D(trues,p3,phi.parms,modelname="SVM")
errorPlot3D(trues,p4,phi.parms,modelname="MARS")
}
}
